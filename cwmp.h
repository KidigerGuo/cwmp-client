/* cwmp.h
   Generated by wsdl2h 2.8.16 from cwmp.wsdl and typemap.dat
   2013-09-08 05:59:01 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2013 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on cwmp.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://localhost:80/Service.wsdl                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:


cwmp = "urn:dslforum-org:cwmp-1-0"

*/

#define SOAP_NAMESPACE_OF_cwmp	"urn:dslforum-org:cwmp-1-0"
//gsoap cwmp schema namespace:	urn:dslforum-org:cwmp-1-0
//gsoap cwmp schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:dslforum-org:cwmp-1-0                                                *
 *                                                                            *
\******************************************************************************/


/// "urn:dslforum-org:cwmp-1-0":ParameterKeyType is a simpleType restriction of xs:string.
/// Length of this string is within 0..32 characters
typedef char* cwmp__ParameterKeyType:32;

/// "urn:dslforum-org:cwmp-1-0":ObjectNameType is a simpleType restriction of xs:string.
/// Length of this string is within 0..256 characters
/// Content pattern is ".*\\." (note: not automatically enforced)
typedef char* cwmp__ObjectNameType ".*\\.":256;

/// "urn:dslforum-org:cwmp-1-0":CommandKeyType is a simpleType restriction of xs:string.
/// Length of this string is within 0..32 characters
typedef char* cwmp__CommandKeyType:32;

/// "urn:dslforum-org:cwmp-1-0":SetParameterAttributesStruct-Notification is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'cwmp__SetParameterAttributesStruct_Notification' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum cwmp__SetParameterAttributesStruct_Notification
{
	cwmp__SetParameterAttributesStruct_Notification__0 = 0,	///< xs:string value="0"
	cwmp__SetParameterAttributesStruct_Notification__1 = 1,	///< xs:string value="1"
	cwmp__SetParameterAttributesStruct_Notification__2 = 2,	///< xs:string value="2"
};

/// "urn:dslforum-org:cwmp-1-0":SetParameterValuesResponse-Status is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'cwmp__SetParameterValuesResponse_Status' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum cwmp__SetParameterValuesResponse_Status
{
	cwmp__SetParameterValuesResponse_Status__0 = 0,	///< xs:string value="0"
	cwmp__SetParameterValuesResponse_Status__1 = 1,	///< xs:string value="1"
};

/// "urn:dslforum-org:cwmp-1-0":ParameterAttributeStruct-Notification is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'cwmp__ParameterAttributeStruct_Notification' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum cwmp__ParameterAttributeStruct_Notification
{
	cwmp__ParameterAttributeStruct_Notification__0 = 0,	///< xs:string value="0"
	cwmp__ParameterAttributeStruct_Notification__1 = 1,	///< xs:string value="1"
	cwmp__ParameterAttributeStruct_Notification__2 = 2,	///< xs:string value="2"
};

/// "urn:dslforum-org:cwmp-1-0":AddObjectResponse-Status is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'cwmp__AddObjectResponse_Status' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum cwmp__AddObjectResponse_Status
{
	cwmp__AddObjectResponse_Status__0 = 0,	///< xs:string value="0"
	cwmp__AddObjectResponse_Status__1 = 1,	///< xs:string value="1"
};

/// "urn:dslforum-org:cwmp-1-0":DeleteObjectResponse-Status is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'cwmp__DeleteObjectResponse_Status' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum cwmp__DeleteObjectResponse_Status
{
	cwmp__DeleteObjectResponse_Status__0 = 0,	///< xs:string value="0"
	cwmp__DeleteObjectResponse_Status__1 = 1,	///< xs:string value="1"
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:dslforum-org:cwmp-1-0                                                *
 *                                                                            *
\******************************************************************************/


/// "urn:dslforum-org:cwmp-1-0":FaultStruct is a complexType.
struct cwmp__FaultStruct
{
/// Element FaultCode of type xs:string.
    char*                                FaultCode                      1;	///< Required element.
/// Element FaultString of type xs:string.
    char*                                FaultString                    1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-0":MethodList is a complexType.
struct cwmp__MethodList
{
/// Size of array of char** is 0..unbounded
   $int                                  __sizestring                   0;
/// Array char** of length 0..unbounded
    char**                               string                         0;	///< Nillable pointer.
};

/// "urn:dslforum-org:cwmp-1-0":ParameterValueStruct is a complexType.
struct cwmp__ParameterValueStruct
{
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Value of type xs:string.
    char*                                Value                          1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-0":SetParameterAttributesStruct is a complexType.
struct cwmp__SetParameterAttributesStruct
{
/// Element Name of type xs:string.
    char*                                Name                           0;	///< Nillable pointer.
/// Element NotificationChange of type xs:boolean.
    enum xsd__boolean                    NotificationChange             1;	///< Required element.
/// Element Notification of type "urn:dslforum-org:cwmp-1-0":SetParameterAttributesStruct-Notification.
    enum cwmp__SetParameterAttributesStruct_Notification  Notification                   1;	///< Required element.
/// Element AccessListChange of type xs:string.
    char*                                AccessListChange               1;	///< Required element.
/// Element AccessList of type "urn:dslforum-org:cwmp-1-0":ArrayOfstring.
    struct cwmpArrayOfstring*           AccessList                     1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-0":EventStruct is a complexType.
struct cwmp__EventStruct
{
/// Element EventCode of type xs:string.
    char*                                EventCode                      1;	///< Required element.
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-0":CommandKeyType.
    cwmp__CommandKeyType                CommandKey                     1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-0":ParameterInfoStruct is a complexType.
struct cwmp__ParameterInfoStruct
{
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Writable of type xs:int.
    int                                  Writable                       1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-0":ParameterAttributeStruct is a complexType.
struct cwmp__ParameterAttributeStruct
{
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Notification of type "urn:dslforum-org:cwmp-1-0":ParameterAttributeStruct-Notification.
    enum cwmp__ParameterAttributeStruct_Notification  Notification                   1;	///< Required element.
/// Element AccessList of type "urn:dslforum-org:cwmp-1-0":ArrayOfstring.
    struct cwmpArrayOfstring*           AccessList                     1;	///< Required element.
};

/// "urn:dslforum-org:cwmp-1-0":DeviceIdStruct is a complexType.
struct cwmp__DeviceIdStruct
{
/// Element Manufacturer of type xs:string.
    char*                                Manufacturer                   0;	///< Nillable pointer.
/// Element OUI of type xs:string.
    char*                                OUI                            0;	///< Nillable pointer.
/// Element ProductClass of type xs:string.
    char*                                ProductClass                   0;	///< Nillable pointer.
/// Element SerialNumber of type xs:string.
    char*                                SerialNumber                   0;	///< Nillable pointer.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":Inform

/// "urn:dslforum-org:cwmp-1-0":Inform is a complexType.
struct _cwmp__Inform
{
/// Element DeviceId of type "urn:dslforum-org:cwmp-1-0":DeviceIdStruct.
    struct cwmp__DeviceIdStruct*        DeviceId                       0;	///< Nillable pointer.
/// Element Event of type "urn:dslforum-org:cwmp-1-0":ArrayOfEventStruct.
    struct cwmpArrayOfEventStruct*      Event                          0;	///< Nillable pointer.
/// Element MaxEnvelopes of type xs:unsignedInt.
    unsigned int                         MaxEnvelopes                   1;	///< Required element.
/// Element CurrentTime of type xs:string.
    char*                                CurrentTime                    0;	///< Nillable pointer.
/// Element RetryCount of type xs:unsignedInt.
    unsigned int                         RetryCount                     1;	///< Required element.
/// Element ParameterList of type "urn:dslforum-org:cwmp-1-0":ArrayOfParameterValueStruct.
    struct cwmpArrayOfParameterValueStruct*  ParameterList                  0;	///< Nillable pointer.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":InformResponse

/// "urn:dslforum-org:cwmp-1-0":InformResponse is a complexType.
struct _cwmp__InformResponse
{
/// Element MaxEnvelopes of type xs:unsignedInt.
    unsigned int                         MaxEnvelopes                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":GetRPCMethods

/// "urn:dslforum-org:cwmp-1-0":GetRPCMethods is a complexType.
struct _cwmp__GetRPCMethods
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":GetRPCMethodsResponse

/// "urn:dslforum-org:cwmp-1-0":GetRPCMethodsResponse is a complexType.
struct _cwmp__GetRPCMethodsResponse
{
/// Element MethodList of type "urn:dslforum-org:cwmp-1-0":MethodList.
    struct cwmp__MethodList*            MethodList                     1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":GetParameterValues

/// "urn:dslforum-org:cwmp-1-0":GetParameterValues is a complexType.
struct _cwmp__GetParameterValues
{
/// Element ParameterNames of type "urn:dslforum-org:cwmp-1-0":ArrayOfstring.
    struct cwmpArrayOfstring*           ParameterNames                 0;	///< Nillable pointer.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":GetParameterValuesResponse

/// "urn:dslforum-org:cwmp-1-0":GetParameterValuesResponse is a complexType.
struct _cwmp__GetParameterValuesResponse
{
/// Element ParameterList of type "urn:dslforum-org:cwmp-1-0":ArrayOfParameterValueStruct.
    struct cwmpArrayOfParameterValueStruct*  ParameterList                  1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":SetParameterValues

/// "urn:dslforum-org:cwmp-1-0":SetParameterValues is a complexType.
struct _cwmp__SetParameterValues
{
/// Element ParameterList of type "urn:dslforum-org:cwmp-1-0":ArrayOfParameterValueStruct.
    struct cwmpArrayOfParameterValueStruct*  ParameterList                  0;	///< Nillable pointer.
/// Element ParameterKey of type "urn:dslforum-org:cwmp-1-0":ParameterKeyType.
    cwmp__ParameterKeyType              ParameterKey                   0;	///< Nillable pointer.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":SetParameterValuesResponse

/// "urn:dslforum-org:cwmp-1-0":SetParameterValuesResponse is a complexType.
struct _cwmp__SetParameterValuesResponse
{
/// Element Status of type "urn:dslforum-org:cwmp-1-0":SetParameterValuesResponse-Status.
    enum cwmp__SetParameterValuesResponse_Status  Status                         1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":GetParameterNames

/// "urn:dslforum-org:cwmp-1-0":GetParameterNames is a complexType.
struct _cwmp__GetParameterNames
{
/// Element ParameterPath of type xs:string.
    char*                                ParameterPath                  0;	///< Nillable pointer.
/// Element NextLevel of type xs:string.
    char*                                NextLevel                      0;	///< Nillable pointer.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":GetParameterNamesResponse

/// "urn:dslforum-org:cwmp-1-0":GetParameterNamesResponse is a complexType.
struct _cwmp__GetParameterNamesResponse
{
/// Element ParameterList of type "urn:dslforum-org:cwmp-1-0":ArrayOfParameterInfoStruct.
    struct cwmpArrayOfParameterInfoStruct*  ParameterList                  1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":SetParameterAttributes

/// "urn:dslforum-org:cwmp-1-0":SetParameterAttributes is a complexType.
struct _cwmp__SetParameterAttributes
{
/// Element ParameterList of type "urn:dslforum-org:cwmp-1-0":ArrayOfSetParameterAttributesStruct.
    struct cwmpArrayOfSetParameterAttributesStruct*  ParameterList                  0;	///< Nillable pointer.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":SetParameterAttributesResponse

/// "urn:dslforum-org:cwmp-1-0":SetParameterAttributesResponse is a complexType.
struct _cwmp__SetParameterAttributesResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":GetParameterAttributes

/// "urn:dslforum-org:cwmp-1-0":GetParameterAttributes is a complexType.
struct _cwmp__GetParameterAttributes
{
/// Element ParameterNames of type "urn:dslforum-org:cwmp-1-0":ArrayOfstring.
    struct cwmpArrayOfstring*           ParameterNames                 0;	///< Nillable pointer.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":GetParameterAttributesResponse

/// "urn:dslforum-org:cwmp-1-0":GetParameterAttributesResponse is a complexType.
struct _cwmp__GetParameterAttributesResponse
{
/// Element ParameterList of type "urn:dslforum-org:cwmp-1-0":ArrayOfParameterAttributeStruct.
    struct cwmpArrayOfParameterAttributeStruct*  ParameterList                  1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":AddObject

/// "urn:dslforum-org:cwmp-1-0":AddObject is a complexType.
struct _cwmp__AddObject
{
/// Element ObjectName of type "urn:dslforum-org:cwmp-1-0":ObjectNameType.
    cwmp__ObjectNameType                ObjectName                     0;	///< Nillable pointer.
/// Element ParameterKey of type "urn:dslforum-org:cwmp-1-0":ParameterKeyType.
    cwmp__ParameterKeyType              ParameterKey                   0;	///< Nillable pointer.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":AddObjectResponse

/// "urn:dslforum-org:cwmp-1-0":AddObjectResponse is a complexType.
struct _cwmp__AddObjectResponse
{
/// Element InstanceNumber of type xs:unsignedInt.
    unsigned int                         InstanceNumber                 1;	///< Required element.
/// Element Status of type "urn:dslforum-org:cwmp-1-0":AddObjectResponse-Status.
    enum cwmp__AddObjectResponse_Status  Status                         1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":DeleteObject

/// "urn:dslforum-org:cwmp-1-0":DeleteObject is a complexType.
struct _cwmp__DeleteObject
{
/// Element ObjectName of type "urn:dslforum-org:cwmp-1-0":ObjectNameType.
    cwmp__ObjectNameType                ObjectName                     0;	///< Nillable pointer.
/// Element ParameterKey of type "urn:dslforum-org:cwmp-1-0":ParameterKeyType.
    cwmp__ParameterKeyType              ParameterKey                   0;	///< Nillable pointer.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":DeleteObjectResponse

/// "urn:dslforum-org:cwmp-1-0":DeleteObjectResponse is a complexType.
struct _cwmp__DeleteObjectResponse
{
/// Element Status of type "urn:dslforum-org:cwmp-1-0":DeleteObjectResponse-Status.
    enum cwmp__DeleteObjectResponse_Status  Status                         1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":Reboot

/// "urn:dslforum-org:cwmp-1-0":Reboot is a complexType.
struct _cwmp__Reboot
{
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-0":CommandKeyType.
    cwmp__CommandKeyType                CommandKey                     0;	///< Nillable pointer.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":RebootResponse

/// "urn:dslforum-org:cwmp-1-0":RebootResponse is a complexType.
struct _cwmp__RebootResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":Download

/// "urn:dslforum-org:cwmp-1-0":Download is a complexType.
struct _cwmp__Download
{
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-0":CommandKeyType.
    cwmp__CommandKeyType                CommandKey                     0;	///< Nillable pointer.
/// Element FileType of type xs:string.
    char*                                FileType                       0;	///< Nillable pointer.
/// Element URL of type xs:string.
    char*                                URL                            0;	///< Nillable pointer.
/// Element Username of type xs:string.
    char*                                Username                       0;	///< Nillable pointer.
/// Element Password of type xs:string.
    char*                                Password                       0;	///< Nillable pointer.
/// Element FileSize of type xs:int.
    int                                  FileSize                       1;	///< Required element.
/// Element TargetFileName of type xs:string.
    char*                                TargetFileName                 0;	///< Nillable pointer.
/// Element DelaySeconds of type xs:int.
    int                                  DelaySeconds                   1;	///< Required element.
/// Element SuccessURL of type xs:string.
    char*                                SuccessURL                     0;	///< Nillable pointer.
/// Element FailureURL of type xs:string.
    char*                                FailureURL                     0;	///< Nillable pointer.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":DownloadResponse

/// "urn:dslforum-org:cwmp-1-0":DownloadResponse is a complexType.
struct _cwmp__DownloadResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":Upload

/// "urn:dslforum-org:cwmp-1-0":Upload is a complexType.
struct _cwmp__Upload
{
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-0":CommandKeyType.
    cwmp__CommandKeyType                CommandKey                     0;	///< Nillable pointer.
/// Element FileType of type xs:string.
    char*                                FileType                       0;	///< Nillable pointer.
/// Element URL of type xs:string.
    char*                                URL                            0;	///< Nillable pointer.
/// Element Username of type xs:string.
    char*                                Username                       0;	///< Nillable pointer.
/// Element Password of type xs:string.
    char*                                Password                       0;	///< Nillable pointer.
/// Element DelaySeconds of type xs:int.
    int                                  DelaySeconds                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":UploadResponse

/// "urn:dslforum-org:cwmp-1-0":UploadResponse is a complexType.
struct _cwmp__UploadResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":FactoryReset

/// "urn:dslforum-org:cwmp-1-0":FactoryReset is a complexType.
struct _cwmp__FactoryReset
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":FactoryResetResponse

/// "urn:dslforum-org:cwmp-1-0":FactoryResetResponse is a complexType.
struct _cwmp__FactoryResetResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":ScheduleInform

/// "urn:dslforum-org:cwmp-1-0":ScheduleInform is a complexType.
struct _cwmp__ScheduleInform
{
/// Element DelaySeconds of type xs:int.
    int                                  DelaySeconds                   1;	///< Required element.
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-0":CommandKeyType.
    cwmp__CommandKeyType                CommandKey                     0;	///< Nillable pointer.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":ScheduleInformResponse

/// "urn:dslforum-org:cwmp-1-0":ScheduleInformResponse is a complexType.
struct _cwmp__ScheduleInformResponse
{
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":TranferComplete

/// "urn:dslforum-org:cwmp-1-0":TranferComplete is a complexType.
struct _cwmp__TranferComplete
{
/// Element CommandKey of type "urn:dslforum-org:cwmp-1-0":CommandKeyType.
    cwmp__CommandKeyType                CommandKey                     0;	///< Nillable pointer.
/// Element FaultStruct of type "urn:dslforum-org:cwmp-1-0":FaultStruct.
    struct cwmp__FaultStruct*           FaultStruct                    1;	///< Required element.
/// Element StartTime of type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// Element CompleteTime of type xs:dateTime.
    time_t                               CompleteTime                   1;	///< Required element.
};


/// Top-level root element "urn:dslforum-org:cwmp-1-0":TranferCompleteResponse

/// "urn:dslforum-org:cwmp-1-0":TranferCompleteResponse is a complexType.
struct _cwmp__TranferCompleteResponse
{
};

/// "urn:dslforum-org:cwmp-1-0":ArrayOfstring is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of xs:string
struct cwmpArrayOfstring
{
/// Pointer to array of char*.
    char*                               *__ptrstring                   ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-0":ArrayOfSetParameterAttributesStruct is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-0":SetParameterAttributesStruct
struct cwmpArrayOfSetParameterAttributesStruct
{
/// Pointer to array of struct cwmp__SetParameterAttributesStruct*.
    struct cwmp__SetParameterAttributesStruct* *__ptrSetParameterAttributesStruct;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-0":ArrayOfParameterInfoStruct is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-0":ParameterInfoStruct
struct cwmpArrayOfParameterInfoStruct
{
/// Pointer to array of struct cwmp__ParameterInfoStruct*.
    struct cwmp__ParameterInfoStruct*  *__ptrParameterInfoStruct      ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-0":ArrayOfParameterAttributeStruct is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-0":ParameterAttributeStruct
struct cwmpArrayOfParameterAttributeStruct
{
/// Pointer to array of struct cwmp__ParameterAttributeStruct*.
    struct cwmp__ParameterAttributeStruct* *__ptrParameterAttributeStruct ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-0":ArrayOfEventStruct is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-0":EventStruct
struct cwmpArrayOfEventStruct
{
/// Pointer to array of struct cwmp__EventStruct*.
    struct cwmp__EventStruct*          *__ptrEventStruct              ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "urn:dslforum-org:cwmp-1-0":ArrayOfParameterValueStruct is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-0":ParameterValueStruct
struct cwmpArrayOfParameterValueStruct
{
/// Pointer to array of struct cwmp__ParameterValueStruct*.
    struct cwmp__ParameterValueStruct* *__ptrParameterValueStruct     ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:dslforum-org:cwmp-1-0                                                *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "urn:dslforum-org:cwmp-1-0":ID of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:dslforum-org:cwmp-1-0                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap cwmp service name:	Cwmp 
//gsoap cwmp service type:	ServicePortType 
//gsoap cwmp service port:	http://localhost:80 
//gsoap cwmp service namespace:	http://localhost:80/Service.wsdl 
//gsoap cwmp service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref Service

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page Service Binding "Service"

@section Service_service Service Documentation "Service"
gSOAP 2.7.10 generated service definition

@section Service_operations Operations of Binding  "Service"

  - @ref __cwmp__Inform

  - @ref __cwmp__GetRPCMethods

  - @ref __cwmp__GetParameterValues

  - @ref __cwmp__SetParameterValues

  - @ref __cwmp__GetParameterNames

  - @ref __cwmp__SetParameterAttributes

  - @ref __cwmp__GetParameterAttributes

  - @ref __cwmp__AddObject

  - @ref __cwmp__DeleteObject

  - @ref __cwmp__Reboot

  - @ref __cwmp__Download

  - @ref __cwmp__Upload

  - @ref __cwmp__FactoryReset

  - @ref __cwmp__ScheduleInform

  - @ref __cwmp__TranferComplete

@section Service_ports Endpoints of Binding  "Service"

  - http://localhost:80

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   Service                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__Inform                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__Inform" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__Inform

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__Inform(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__Inform*              cwmp__Inform,
    // output parameters:
    struct _cwmp__InformResponse*      cwmp__InformResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__Inform(
    struct soap *soap,
    // input parameters:
    struct _cwmp__Inform*              cwmp__Inform,
    // output parameters:
    struct _cwmp__InformResponse*      cwmp__InformResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	Inform SOAP
//gsoap cwmp service method-style:	Inform document
//gsoap cwmp service method-encoding:	Inform literal
//gsoap cwmp service method-action:	Inform ""
//gsoap cwmp service method-output-action:	Inform Response
int __cwmp__Inform(
    struct _cwmp__Inform*              cwmp__Inform,	///< Input parameter
    struct _cwmp__InformResponse*      cwmp__InformResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__GetRPCMethods                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__GetRPCMethods" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__GetRPCMethods

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__GetRPCMethods(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__GetRPCMethods*       cwmp__GetRPCMethods,
    // output parameters:
    struct _cwmp__GetRPCMethodsResponse* cwmp__GetRPCMethodsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__GetRPCMethods(
    struct soap *soap,
    // input parameters:
    struct _cwmp__GetRPCMethods*       cwmp__GetRPCMethods,
    // output parameters:
    struct _cwmp__GetRPCMethodsResponse* cwmp__GetRPCMethodsResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	GetRPCMethods SOAP
//gsoap cwmp service method-style:	GetRPCMethods document
//gsoap cwmp service method-encoding:	GetRPCMethods literal
//gsoap cwmp service method-action:	GetRPCMethods ""
//gsoap cwmp service method-output-action:	GetRPCMethods Response
int __cwmp__GetRPCMethods(
    struct _cwmp__GetRPCMethods*       cwmp__GetRPCMethods,	///< Input parameter
    struct _cwmp__GetRPCMethodsResponse* cwmp__GetRPCMethodsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__GetParameterValues                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__GetParameterValues" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__GetParameterValues

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__GetParameterValues(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__GetParameterValues*  cwmp__GetParameterValues,
    // output parameters:
    struct _cwmp__GetParameterValuesResponse* cwmp__GetParameterValuesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__GetParameterValues(
    struct soap *soap,
    // input parameters:
    struct _cwmp__GetParameterValues*  cwmp__GetParameterValues,
    // output parameters:
    struct _cwmp__GetParameterValuesResponse* cwmp__GetParameterValuesResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	GetParameterValues SOAP
//gsoap cwmp service method-style:	GetParameterValues document
//gsoap cwmp service method-encoding:	GetParameterValues literal
//gsoap cwmp service method-action:	GetParameterValues ""
//gsoap cwmp service method-output-action:	GetParameterValues Response
int __cwmp__GetParameterValues(
    struct _cwmp__GetParameterValues*  cwmp__GetParameterValues,	///< Input parameter
    struct _cwmp__GetParameterValuesResponse* cwmp__GetParameterValuesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__SetParameterValues                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__SetParameterValues" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__SetParameterValues

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__SetParameterValues(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__SetParameterValues*  cwmp__SetParameterValues,
    // output parameters:
    struct _cwmp__SetParameterValuesResponse* cwmp__SetParameterValuesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__SetParameterValues(
    struct soap *soap,
    // input parameters:
    struct _cwmp__SetParameterValues*  cwmp__SetParameterValues,
    // output parameters:
    struct _cwmp__SetParameterValuesResponse* cwmp__SetParameterValuesResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	SetParameterValues SOAP
//gsoap cwmp service method-style:	SetParameterValues document
//gsoap cwmp service method-encoding:	SetParameterValues literal
//gsoap cwmp service method-action:	SetParameterValues ""
//gsoap cwmp service method-output-action:	SetParameterValues Response
int __cwmp__SetParameterValues(
    struct _cwmp__SetParameterValues*  cwmp__SetParameterValues,	///< Input parameter
    struct _cwmp__SetParameterValuesResponse* cwmp__SetParameterValuesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__GetParameterNames                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__GetParameterNames" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__GetParameterNames

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__GetParameterNames(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__GetParameterNames*   cwmp__GetParameterNames,
    // output parameters:
    struct _cwmp__GetParameterNamesResponse* cwmp__GetParameterNamesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__GetParameterNames(
    struct soap *soap,
    // input parameters:
    struct _cwmp__GetParameterNames*   cwmp__GetParameterNames,
    // output parameters:
    struct _cwmp__GetParameterNamesResponse* cwmp__GetParameterNamesResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	GetParameterNames SOAP
//gsoap cwmp service method-style:	GetParameterNames document
//gsoap cwmp service method-encoding:	GetParameterNames literal
//gsoap cwmp service method-action:	GetParameterNames ""
//gsoap cwmp service method-output-action:	GetParameterNames Response
int __cwmp__GetParameterNames(
    struct _cwmp__GetParameterNames*   cwmp__GetParameterNames,	///< Input parameter
    struct _cwmp__GetParameterNamesResponse* cwmp__GetParameterNamesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__SetParameterAttributes                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__SetParameterAttributes" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__SetParameterAttributes

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__SetParameterAttributes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__SetParameterAttributes* cwmp__SetParameterAttributes,
    // output parameters:
    struct _cwmp__SetParameterAttributesResponse* cwmp__SetParameterAttributesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__SetParameterAttributes(
    struct soap *soap,
    // input parameters:
    struct _cwmp__SetParameterAttributes* cwmp__SetParameterAttributes,
    // output parameters:
    struct _cwmp__SetParameterAttributesResponse* cwmp__SetParameterAttributesResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	SetParameterAttributes SOAP
//gsoap cwmp service method-style:	SetParameterAttributes document
//gsoap cwmp service method-encoding:	SetParameterAttributes literal
//gsoap cwmp service method-action:	SetParameterAttributes ""
//gsoap cwmp service method-output-action:	SetParameterAttributes Response
int __cwmp__SetParameterAttributes(
    struct _cwmp__SetParameterAttributes* cwmp__SetParameterAttributes,	///< Input parameter
    struct _cwmp__SetParameterAttributesResponse* cwmp__SetParameterAttributesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__GetParameterAttributes                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__GetParameterAttributes" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__GetParameterAttributes

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__GetParameterAttributes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__GetParameterAttributes* cwmp__GetParameterAttributes,
    // output parameters:
    struct _cwmp__GetParameterAttributesResponse* cwmp__GetParameterAttributesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__GetParameterAttributes(
    struct soap *soap,
    // input parameters:
    struct _cwmp__GetParameterAttributes* cwmp__GetParameterAttributes,
    // output parameters:
    struct _cwmp__GetParameterAttributesResponse* cwmp__GetParameterAttributesResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	GetParameterAttributes SOAP
//gsoap cwmp service method-style:	GetParameterAttributes document
//gsoap cwmp service method-encoding:	GetParameterAttributes literal
//gsoap cwmp service method-action:	GetParameterAttributes ""
//gsoap cwmp service method-output-action:	GetParameterAttributes Response
int __cwmp__GetParameterAttributes(
    struct _cwmp__GetParameterAttributes* cwmp__GetParameterAttributes,	///< Input parameter
    struct _cwmp__GetParameterAttributesResponse* cwmp__GetParameterAttributesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__AddObject                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__AddObject" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__AddObject

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__AddObject(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__AddObject*           cwmp__AddObject,
    // output parameters:
    struct _cwmp__AddObjectResponse*   cwmp__AddObjectResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__AddObject(
    struct soap *soap,
    // input parameters:
    struct _cwmp__AddObject*           cwmp__AddObject,
    // output parameters:
    struct _cwmp__AddObjectResponse*   cwmp__AddObjectResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	AddObject SOAP
//gsoap cwmp service method-style:	AddObject document
//gsoap cwmp service method-encoding:	AddObject literal
//gsoap cwmp service method-action:	AddObject ""
//gsoap cwmp service method-output-action:	AddObject Response
int __cwmp__AddObject(
    struct _cwmp__AddObject*           cwmp__AddObject,	///< Input parameter
    struct _cwmp__AddObjectResponse*   cwmp__AddObjectResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__DeleteObject                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__DeleteObject" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__DeleteObject

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__DeleteObject(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__DeleteObject*        cwmp__DeleteObject,
    // output parameters:
    struct _cwmp__DeleteObjectResponse* cwmp__DeleteObjectResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__DeleteObject(
    struct soap *soap,
    // input parameters:
    struct _cwmp__DeleteObject*        cwmp__DeleteObject,
    // output parameters:
    struct _cwmp__DeleteObjectResponse* cwmp__DeleteObjectResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	DeleteObject SOAP
//gsoap cwmp service method-style:	DeleteObject document
//gsoap cwmp service method-encoding:	DeleteObject literal
//gsoap cwmp service method-action:	DeleteObject ""
//gsoap cwmp service method-output-action:	DeleteObject Response
int __cwmp__DeleteObject(
    struct _cwmp__DeleteObject*        cwmp__DeleteObject,	///< Input parameter
    struct _cwmp__DeleteObjectResponse* cwmp__DeleteObjectResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__Reboot                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__Reboot" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__Reboot

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__Reboot(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__Reboot*              cwmp__Reboot,
    // output parameters:
    struct _cwmp__RebootResponse*      cwmp__RebootResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__Reboot(
    struct soap *soap,
    // input parameters:
    struct _cwmp__Reboot*              cwmp__Reboot,
    // output parameters:
    struct _cwmp__RebootResponse*      cwmp__RebootResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	Reboot SOAP
//gsoap cwmp service method-style:	Reboot document
//gsoap cwmp service method-encoding:	Reboot literal
//gsoap cwmp service method-action:	Reboot ""
//gsoap cwmp service method-output-action:	Reboot Response
int __cwmp__Reboot(
    struct _cwmp__Reboot*              cwmp__Reboot,	///< Input parameter
    struct _cwmp__RebootResponse*      cwmp__RebootResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__Download                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__Download" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__Download

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__Download(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__Download*            cwmp__Download,
    // output parameters:
    struct _cwmp__DownloadResponse*    cwmp__DownloadResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__Download(
    struct soap *soap,
    // input parameters:
    struct _cwmp__Download*            cwmp__Download,
    // output parameters:
    struct _cwmp__DownloadResponse*    cwmp__DownloadResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	Download SOAP
//gsoap cwmp service method-style:	Download document
//gsoap cwmp service method-encoding:	Download literal
//gsoap cwmp service method-action:	Download ""
//gsoap cwmp service method-output-action:	Download Response
int __cwmp__Download(
    struct _cwmp__Download*            cwmp__Download,	///< Input parameter
    struct _cwmp__DownloadResponse*    cwmp__DownloadResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__Upload                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__Upload" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__Upload

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__Upload(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__Upload*              cwmp__Upload,
    // output parameters:
    struct _cwmp__UploadResponse*      cwmp__UploadResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__Upload(
    struct soap *soap,
    // input parameters:
    struct _cwmp__Upload*              cwmp__Upload,
    // output parameters:
    struct _cwmp__UploadResponse*      cwmp__UploadResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	Upload SOAP
//gsoap cwmp service method-style:	Upload document
//gsoap cwmp service method-encoding:	Upload literal
//gsoap cwmp service method-action:	Upload ""
//gsoap cwmp service method-output-action:	Upload Response
int __cwmp__Upload(
    struct _cwmp__Upload*              cwmp__Upload,	///< Input parameter
    struct _cwmp__UploadResponse*      cwmp__UploadResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__FactoryReset                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__FactoryReset" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__FactoryReset

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__FactoryReset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__FactoryReset*        cwmp__FactoryReset,
    // output parameters:
    struct _cwmp__FactoryResetResponse* cwmp__FactoryResetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__FactoryReset(
    struct soap *soap,
    // input parameters:
    struct _cwmp__FactoryReset*        cwmp__FactoryReset,
    // output parameters:
    struct _cwmp__FactoryResetResponse* cwmp__FactoryResetResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	FactoryReset SOAP
//gsoap cwmp service method-style:	FactoryReset document
//gsoap cwmp service method-encoding:	FactoryReset literal
//gsoap cwmp service method-action:	FactoryReset ""
//gsoap cwmp service method-output-action:	FactoryReset Response
int __cwmp__FactoryReset(
    struct _cwmp__FactoryReset*        cwmp__FactoryReset,	///< Input parameter
    struct _cwmp__FactoryResetResponse* cwmp__FactoryResetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__ScheduleInform                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__ScheduleInform" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__ScheduleInform

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__ScheduleInform(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__ScheduleInform*      cwmp__ScheduleInform,
    // output parameters:
    struct _cwmp__ScheduleInformResponse* cwmp__ScheduleInformResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__ScheduleInform(
    struct soap *soap,
    // input parameters:
    struct _cwmp__ScheduleInform*      cwmp__ScheduleInform,
    // output parameters:
    struct _cwmp__ScheduleInformResponse* cwmp__ScheduleInformResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	ScheduleInform SOAP
//gsoap cwmp service method-style:	ScheduleInform document
//gsoap cwmp service method-encoding:	ScheduleInform literal
//gsoap cwmp service method-action:	ScheduleInform ""
//gsoap cwmp service method-output-action:	ScheduleInform Response
int __cwmp__ScheduleInform(
    struct _cwmp__ScheduleInform*      cwmp__ScheduleInform,	///< Input parameter
    struct _cwmp__ScheduleInformResponse* cwmp__ScheduleInformResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __cwmp__TranferComplete                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__cwmp__TranferComplete" of service binding "Service"

/**

Operation details:
Service definition of function cwmp__TranferComplete

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___cwmp__TranferComplete(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _cwmp__TranferComplete*     cwmp__TranferComplete,
    // output parameters:
    struct _cwmp__TranferCompleteResponse* cwmp__TranferCompleteResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __cwmp__TranferComplete(
    struct soap *soap,
    // input parameters:
    struct _cwmp__TranferComplete*     cwmp__TranferComplete,
    // output parameters:
    struct _cwmp__TranferCompleteResponse* cwmp__TranferCompleteResponse
  );
@endcode

*/

//gsoap cwmp service method-protocol:	TranferComplete SOAP
//gsoap cwmp service method-style:	TranferComplete document
//gsoap cwmp service method-encoding:	TranferComplete literal
//gsoap cwmp service method-action:	TranferComplete ""
//gsoap cwmp service method-output-action:	TranferComplete Response
int __cwmp__TranferComplete(
    struct _cwmp__TranferComplete*     cwmp__TranferComplete,	///< Input parameter
    struct _cwmp__TranferCompleteResponse* cwmp__TranferCompleteResponse	///< Output parameter
);

/**

@page Service Binding "Service"

@section Service_policy_enablers Policy Enablers of Binding  "Service"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section cwmp Top-level root elements of schema "urn:dslforum-org:cwmp-1-0"

  - <cwmp:ID> (use wsdl2h option -g to auto-generate)

  - <cwmp:Inform> @ref _cwmp__Inform
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__Inform(struct soap*, struct _cwmp__Inform*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__Inform(struct soap*, struct _cwmp__Inform*);
    @endcode

  - <cwmp:InformResponse> @ref _cwmp__InformResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__InformResponse(struct soap*, struct _cwmp__InformResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__InformResponse(struct soap*, struct _cwmp__InformResponse*);
    @endcode

  - <cwmp:GetRPCMethods> @ref _cwmp__GetRPCMethods
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetRPCMethods(struct soap*, struct _cwmp__GetRPCMethods*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetRPCMethods(struct soap*, struct _cwmp__GetRPCMethods*);
    @endcode

  - <cwmp:GetRPCMethodsResponse> @ref _cwmp__GetRPCMethodsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetRPCMethodsResponse(struct soap*, struct _cwmp__GetRPCMethodsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetRPCMethodsResponse(struct soap*, struct _cwmp__GetRPCMethodsResponse*);
    @endcode

  - <cwmp:GetParameterValues> @ref _cwmp__GetParameterValues
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetParameterValues(struct soap*, struct _cwmp__GetParameterValues*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetParameterValues(struct soap*, struct _cwmp__GetParameterValues*);
    @endcode

  - <cwmp:GetParameterValuesResponse> @ref _cwmp__GetParameterValuesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetParameterValuesResponse(struct soap*, struct _cwmp__GetParameterValuesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetParameterValuesResponse(struct soap*, struct _cwmp__GetParameterValuesResponse*);
    @endcode

  - <cwmp:SetParameterValues> @ref _cwmp__SetParameterValues
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__SetParameterValues(struct soap*, struct _cwmp__SetParameterValues*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__SetParameterValues(struct soap*, struct _cwmp__SetParameterValues*);
    @endcode

  - <cwmp:SetParameterValuesResponse> @ref _cwmp__SetParameterValuesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__SetParameterValuesResponse(struct soap*, struct _cwmp__SetParameterValuesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__SetParameterValuesResponse(struct soap*, struct _cwmp__SetParameterValuesResponse*);
    @endcode

  - <cwmp:GetParameterNames> @ref _cwmp__GetParameterNames
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetParameterNames(struct soap*, struct _cwmp__GetParameterNames*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetParameterNames(struct soap*, struct _cwmp__GetParameterNames*);
    @endcode

  - <cwmp:GetParameterNamesResponse> @ref _cwmp__GetParameterNamesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetParameterNamesResponse(struct soap*, struct _cwmp__GetParameterNamesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetParameterNamesResponse(struct soap*, struct _cwmp__GetParameterNamesResponse*);
    @endcode

  - <cwmp:SetParameterAttributes> @ref _cwmp__SetParameterAttributes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__SetParameterAttributes(struct soap*, struct _cwmp__SetParameterAttributes*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__SetParameterAttributes(struct soap*, struct _cwmp__SetParameterAttributes*);
    @endcode

  - <cwmp:SetParameterAttributesResponse> @ref _cwmp__SetParameterAttributesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__SetParameterAttributesResponse(struct soap*, struct _cwmp__SetParameterAttributesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__SetParameterAttributesResponse(struct soap*, struct _cwmp__SetParameterAttributesResponse*);
    @endcode

  - <cwmp:GetParameterAttributes> @ref _cwmp__GetParameterAttributes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetParameterAttributes(struct soap*, struct _cwmp__GetParameterAttributes*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetParameterAttributes(struct soap*, struct _cwmp__GetParameterAttributes*);
    @endcode

  - <cwmp:GetParameterAttributesResponse> @ref _cwmp__GetParameterAttributesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetParameterAttributesResponse(struct soap*, struct _cwmp__GetParameterAttributesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetParameterAttributesResponse(struct soap*, struct _cwmp__GetParameterAttributesResponse*);
    @endcode

  - <cwmp:AddObject> @ref _cwmp__AddObject
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__AddObject(struct soap*, struct _cwmp__AddObject*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__AddObject(struct soap*, struct _cwmp__AddObject*);
    @endcode

  - <cwmp:AddObjectResponse> @ref _cwmp__AddObjectResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__AddObjectResponse(struct soap*, struct _cwmp__AddObjectResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__AddObjectResponse(struct soap*, struct _cwmp__AddObjectResponse*);
    @endcode

  - <cwmp:DeleteObject> @ref _cwmp__DeleteObject
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__DeleteObject(struct soap*, struct _cwmp__DeleteObject*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__DeleteObject(struct soap*, struct _cwmp__DeleteObject*);
    @endcode

  - <cwmp:DeleteObjectResponse> @ref _cwmp__DeleteObjectResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__DeleteObjectResponse(struct soap*, struct _cwmp__DeleteObjectResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__DeleteObjectResponse(struct soap*, struct _cwmp__DeleteObjectResponse*);
    @endcode

  - <cwmp:Reboot> @ref _cwmp__Reboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__Reboot(struct soap*, struct _cwmp__Reboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__Reboot(struct soap*, struct _cwmp__Reboot*);
    @endcode

  - <cwmp:RebootResponse> @ref _cwmp__RebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__RebootResponse(struct soap*, struct _cwmp__RebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__RebootResponse(struct soap*, struct _cwmp__RebootResponse*);
    @endcode

  - <cwmp:Download> @ref _cwmp__Download
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__Download(struct soap*, struct _cwmp__Download*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__Download(struct soap*, struct _cwmp__Download*);
    @endcode

  - <cwmp:DownloadResponse> @ref _cwmp__DownloadResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__DownloadResponse(struct soap*, struct _cwmp__DownloadResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__DownloadResponse(struct soap*, struct _cwmp__DownloadResponse*);
    @endcode

  - <cwmp:Upload> @ref _cwmp__Upload
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__Upload(struct soap*, struct _cwmp__Upload*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__Upload(struct soap*, struct _cwmp__Upload*);
    @endcode

  - <cwmp:UploadResponse> @ref _cwmp__UploadResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__UploadResponse(struct soap*, struct _cwmp__UploadResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__UploadResponse(struct soap*, struct _cwmp__UploadResponse*);
    @endcode

  - <cwmp:FactoryReset> @ref _cwmp__FactoryReset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__FactoryReset(struct soap*, struct _cwmp__FactoryReset*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__FactoryReset(struct soap*, struct _cwmp__FactoryReset*);
    @endcode

  - <cwmp:FactoryResetResponse> @ref _cwmp__FactoryResetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__FactoryResetResponse(struct soap*, struct _cwmp__FactoryResetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__FactoryResetResponse(struct soap*, struct _cwmp__FactoryResetResponse*);
    @endcode

  - <cwmp:ScheduleInform> @ref _cwmp__ScheduleInform
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__ScheduleInform(struct soap*, struct _cwmp__ScheduleInform*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__ScheduleInform(struct soap*, struct _cwmp__ScheduleInform*);
    @endcode

  - <cwmp:ScheduleInformResponse> @ref _cwmp__ScheduleInformResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__ScheduleInformResponse(struct soap*, struct _cwmp__ScheduleInformResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__ScheduleInformResponse(struct soap*, struct _cwmp__ScheduleInformResponse*);
    @endcode

  - <cwmp:TranferComplete> @ref _cwmp__TranferComplete
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__TranferComplete(struct soap*, struct _cwmp__TranferComplete*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__TranferComplete(struct soap*, struct _cwmp__TranferComplete*);
    @endcode

  - <cwmp:TranferCompleteResponse> @ref _cwmp__TranferCompleteResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__TranferCompleteResponse(struct soap*, struct _cwmp__TranferCompleteResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__TranferCompleteResponse(struct soap*, struct _cwmp__TranferCompleteResponse*);
    @endcode

*/

/* End of cwmp.h */
